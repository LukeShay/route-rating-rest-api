name: CI
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11.0.6'
      - run: ./scripts/build.sh
      - uses: actions/upload-artifact@v1
        with:
          name: rest-api.jar 
          path: rest-api.jar
      - uses: actions/upload-artifact@v1
        with:
          name: build-artifacts
          path: build
  coverage:
    runs-on: ubuntu-latest
    env:
      BRANCH: ${GITHUB_REF:11}
      PROJECT_KEY: LukeShay_route-rating-rest-api
      SHA: ${GITHUB_SHA::7}
    name: Coverage
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11.0.6'
      - uses: actions/download-artifact@v1
        with:
          name: build-artifacts
          path: build
      - run: ./gradlew sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.branch.name=${{ env.BRANCH }} -Dsonar.project.version=${{ env.SHA}}
  push-image:
    runs-on: ubuntu-latest
    needs: [build]
    env:
      DOCKER_REPO: lukeshaydocker/route-rating-rest-api
      SHA: ${GITHUB_SHA::7}
      BRANCH: ${GITHUB_REF}
    name: Docker image
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: rest-api.jar
          path: rest-api.jar
      - run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
      - run: docker build -t ${{ env.DOCKER_REPO }}:${{ env.SHA }} -t ${{ env.DOCKER_REPO }}:latest -f deploy/Dockerfile .
      - run: docker push ${{ env.DOCKER_REPO }}:${{ env.SHA }}
      - run: test `echo ${{ env.BRANCH }} | grep "master"` && docker push ${{ env.DOCKER_REPO }}:latest || echo "Not pushing latest because on branch"
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-2
    name: Lambda deploy
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: build-artifacts
          path: build
      - uses: youyo/aws-sam-action/python3.8@master
        with:
          sam_command: 'package --s3-bucket route-rating-rest-api-builds --s3-prefix latest --output-template-file output.yml'
      - uses: youyo/aws-sam-action/python3.8@master
        with: 
          sam_command: 'deploy --s3-bucket route-rating-rest-api-builds --template-file output.yml --region us-east-2 --no-confirm-changeset --stack-name route-rating-rest-api --capabilities CAPABILITY_IAM' 
