name: route-rating-rest-api continuous integration
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11.0.5' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - run: ./gradlew build

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11.0.5' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - run: ./gradlew verifyGoogleJavaFormat

  coverage:
    runs-on: ubuntu-latest
    env:
      BRANCH: ${GITHUB_REF}
      PROJECT_KEY: LukeShay_route-rating-rest-api
      SHA: ${GITHUB_SHA::7}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11.0.5' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - uses: warchant/setup-sonar-scanner@v1
        with:
          version: 4.3.0.2102
      - run: ./gradlew build
      - run: sonar-scanner \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.branch.name=${{ env.BRANCH }} \
          -Dsonar.projectKey=${{ env.PROJECT_KEY }} \
          -Dsonar.projectVersion=${{ env.SHA }} \
          -Dsonar.organization=luke-shay \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.sources=src/main/java/ \
          -Dsonar.exclusions=**/*Repository.class,**/*Repository.java,**/*Body.class,**/*Body.java,**/*View.class,**/*View.java,**/*Payload.class,**/*Payload.java,**/*Filter.class,**/*Filter.java,**/*Exception.class,**/*Exception.java,**/*SpringMain.class,**/*SpringMain.java \
          -Dsonar.tests=src/test/java/ \
          -Dsonar.java.source=11 \
          -Dsonar.java.target=11 \
          -Dsonar.java.binaries=build/classes/java/main/ \
          -Dsonar.java.test.binaries=build/classes/java/test/ \
          -Dsonar.junit.reportPaths=build/test-results/test/

  push-image:
    runs-on: ubuntu-latest
    needs: [build, lint, coverage]
    env:
      DOCKER_REPO: lukeshaydocker/route-rating-rest-api
      SHA: ${GITHUB_SHA::7}
      BRANCH: ${GITHUB_REF}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11.0.5' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - run: ./scripts/build.sh
      - run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
      - run: docker build -t ${{ env.DOCKER_REPO }}:${{ env.SHA }} -t ${{ env.DOCKER_REPO }}:latest -f deploy/Dockerfile .
      - run: docker push ${{ env.DOCKER_REPO }}:${{ env.SHA }}
      - run: test `echo ${{ env.BRANCH }} | grep "master"` && docker push ${{ env.DOCKER_REPO }}:latest || echo "Not pushing latest because on branch"

